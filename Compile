//Compile.java
//Compile menu, exports a word document
//Made by James Zhang and Maggie Pang
//Last edit: Jan 10

//imports
import java.awt.Color;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import java.io.FileOutputStream;
import java.io.IOException;


public class Compile extends JFrame implements ActionListener {

	// final variables
	private static final int PANEL_WIDTH = 700;
	private static final int PANEL_HEIGHT = 700;
	private static final int BUTTON_WIDTH = 150;
	private static final int BUTTON_HEIGHT = 50;

	// button variables
	JButton return_;
	JButton save_;
	JButton download_;

	// object declarations
	Menu menu;

	public Compile(Menu menu) {

		this.menu = menu;

		// panel sizing
		this.setTitle("GHHSB Lab Report System - Compile");
		this.setSize(PANEL_WIDTH, PANEL_HEIGHT);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		this.setFocusable(true); // make everything in this class appear on the screen
		this.getContentPane().setBackground(Color.WHITE);
		HideWindow();

		Container c = getContentPane();
		c.setLayout(null);

		// button instantiations
		return_ = new JButton("Return");
		return_.addActionListener(this);
		return_.setSize(BUTTON_WIDTH, BUTTON_HEIGHT);
		return_.setLocation(50, 600);

		save_ = new JButton("Save");
		save_.addActionListener(this);
		save_.setSize(BUTTON_WIDTH, BUTTON_HEIGHT);
		save_.setLocation(275, 600);

		download_ = new JButton("Download");
		download_.addActionListener(this);
		download_.setSize(BUTTON_WIDTH, BUTTON_HEIGHT);
		download_.setLocation(500, 600);

		// adds buttons
		c.add(return_);
		c.add(save_);
		c.add(download_);

		repaint();
	}

	public void paint(Graphics g) {

		super.paint(g);

	}

	public void HideWindow() {
		setVisible(false);
	}

	public void ShowWindow() {
		setVisible(true);
	}

	@Override
	public void actionPerformed(ActionEvent e) {

		// opens each different class
		if (e.getSource() == return_) {

			HideWindow();
			menu.ShowWindow();

		} else if (e.getSource() == save_) {

			HideWindow();

		} else if (e.getSource() == download_) {

			HideWindow();
			
			try {
				// Create a new Word document
				XWPFDocument document = new XWPFDocument();

				// Create a paragraph
				XWPFParagraph paragraph = document.createParagraph();

				// Create a run within the paragraph
				XWPFRun run = paragraph.createRun();

				// Add text to the run
				run.setText("Hello, this is a sample Word document!");

				// Specify the output file path in the Downloads folder
				String home = System.getProperty("user.home");
				String filePath = home + "/Downloads/document.docx";

				// Create a FileOutputStream to write the document to a file
				try (FileOutputStream out = new FileOutputStream(filePath)) {
					// Write the document to the file
					document.write(out);
					System.out.println("Word document exported successfully!");
				}

			} catch (IOException ex) {
				ex.printStackTrace();
			}

		}
	}

}
