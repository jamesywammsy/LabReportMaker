//Menu.java
//Runs the Main Menu GUI of the GHHSB Lab Report System
//Made by James Zhang and Maggie Pang
//Last edit: Jan 13

//TODO: wait until all classes are completed and link each class to this class

//imports
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class Menu extends JFrame implements ActionListener {

	// final variables
	private static final int PANEL_WIDTH = 700;
	private static final int PANEL_HEIGHT = 700;
	private static final int SECTION_WIDTH = 600;
	private static final int SECTION_HEIGHT = 50;
	private static final int BUTTON_WIDTH = 100;
	private static final int BUTTON_HEIGHT = 50;

	// variables
	public String[] completed = { "Not Completed", "Not Completed", "Not Completed", "Not Completed", "Not Completed",
			"Not Completed", "Not Completed" };
	
	//object declarations
	Start start;
	Compile compile;
	General general;
	Table table;
	
	// button variables
	JButton abstract_;
	JButton theory_;
	JButton method_;
	JButton tables_;
	JButton analysis_;
	JButton conclusion_;
	JButton citations_;
	JButton compile_;
	JButton return_;

	public Menu(Start start) {

		this.start = start;
		general = new General(this);
		table = new Table(this);
		
		compile = new Compile(this, general);
		
		// panel sizing
		this.setTitle("GHHSB Lab Report System - Main Menu");
		this.setSize(PANEL_WIDTH, PANEL_HEIGHT);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		this.setFocusable(true); // make everything in this class appear on the screen
		this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		this.getContentPane().setBackground(Color.WHITE);
		HideWindow();
		
		Container c = getContentPane();
		c.setLayout(null);

		// button instantiations
		abstract_ = new JButton(
				"Section 1: Abstract                                                                            "
						+ completed[0]);
		abstract_.addActionListener(this);
		abstract_.setSize(SECTION_WIDTH, SECTION_HEIGHT);
		abstract_.setLocation(50, 50);

		theory_ = new JButton(
				"Section 2: Theory                                                                               "
						+ completed[1]);
		theory_.addActionListener(this);
		theory_.setSize(SECTION_WIDTH, SECTION_HEIGHT);
		theory_.setLocation(50, 110);

		method_ = new JButton(
				"Section 3: Method                                                                              "
						+ completed[2]);
		method_.addActionListener(this);
		method_.setSize(SECTION_WIDTH, SECTION_HEIGHT);
		method_.setLocation(50, 170);

		tables_ = new JButton(
				"Section 4: Tables                                                                               "
						+ completed[3]);
		tables_.addActionListener(this);
		tables_.setSize(SECTION_WIDTH, SECTION_HEIGHT);
		tables_.setLocation(50, 230);

		analysis_ = new JButton(
				"Section 5: Analysis                                                                           "
						+ completed[4]);
		analysis_.addActionListener(this);
		analysis_.setSize(SECTION_WIDTH, SECTION_HEIGHT);
		analysis_.setLocation(50, 290);

		conclusion_ = new JButton(
				"Section 6: Conclusion                                                                       "
						+ completed[5]);
		conclusion_.addActionListener(this);
		conclusion_.setSize(SECTION_WIDTH, SECTION_HEIGHT);
		conclusion_.setLocation(50, 350);

		citations_ = new JButton(
				"Section 7: Citations                                                                         "
						+ completed[6]);
		citations_.addActionListener(this);
		citations_.setSize(SECTION_WIDTH, SECTION_HEIGHT);
		citations_.setLocation(50, 410);

		compile_ = new JButton("Compile");
		compile_.addActionListener(this);
		compile_.setSize(BUTTON_WIDTH, BUTTON_HEIGHT);
		compile_.setLocation(200, 530);

		return_ = new JButton("Return");
		return_.addActionListener(this);
		return_.setSize(BUTTON_WIDTH, BUTTON_HEIGHT);
		return_.setLocation(400, 530);

		// adds button to screen
		c.add(abstract_);
		c.add(theory_);
		c.add(method_);
		c.add(tables_);
		c.add(analysis_);
		c.add(conclusion_);
		c.add(citations_);
		c.add(compile_);
		c.add(return_);

		repaint();
	}

	public void paint(Graphics g) {

		super.paint(g);

	}
	
	public void RefreshCompleted(int location, boolean complete) {
		
		if (complete) {
			completed[location] = "Completed";
		}
		else {
			completed[location] = "Not Completed";
		}
		
		if (location == 0) {
			abstract_.setText("Section 1: Abstract                                                                            "
					+completed[location]);
		}
		else if(location == 1) {
			theory_.setText("Section 2: Theory                                                                               "
					+completed[location]);
		}
		else if(location == 2) {
			method_.setText("Section 3: Method                                                                              "
					+ completed[location]);
		}
		else if(location == 3) {
			tables_.setText("Section 4: Tables                                                                               "
					+ completed[location]);
		}
		else if(location == 4) {
			analysis_.setText("Section 5: Analysis                                                                           "
					+ completed[location]);
		}
		else if(location == 5) {
			conclusion_.setText("Section 6: Conclusion                                                                       "
					+ completed[location]);
		}
		else if(location == 6) {
			citations_.setText("Section 7: Citations                                                                         "
					+ completed[location]);
		}
		
	}
	
	public void HideWindow() {
		setVisible(false);
	}
	
	public void ShowWindow() {
		setVisible(true);
	}

	/*
	 * TESTING PURPOSES ONLY ********************************* 
	 * public static void main(String[] args) { 
	 * 
	 * new Menu(); 
	 * 
	 * }
	 */

	@Override
	public void actionPerformed(ActionEvent e) {

		// opens each different class
		if (e.getSource() == abstract_) {

			general.ShowWindow();
			HideWindow();

		} else if (e.getSource() == theory_) {

			HideWindow();

		} else if (e.getSource() == method_) {

			HideWindow();

		} else if (e.getSource() == tables_) {

			table.ShowWindow();
			HideWindow();

		} else if (e.getSource() == analysis_) {

			HideWindow();

		} else if (e.getSource() == conclusion_) {

			HideWindow();

		} else if (e.getSource() == citations_) {

			HideWindow();

		}

		else if (e.getSource() == compile_) {

			HideWindow();
			compile.ShowWindow();
			
		} else if (e.getSource() == return_) {

			HideWindow();
			start.ShowWindow();

		}

		repaint();
	}

}
